{
  "AppOption" : [ "config.WithImageDir", "config.WithModelPath", "config.WithDynamicConfigDirPollInterval", "config.WithConfigFile", "config.WithLoadToMemory", "config.WithAudioDir", "config.WithP2PNetworkID", "config.WithMachineTag", "config.WithP2PToken", "config.SetWatchDogIdleTimeout", "config.WithDynamicConfigDir", "config.WithHttpGetExemptedEndpoints", "config.SetWatchDogBusyTimeout", "config.WithExternalBackend", "config.WithDebug", "config.WithEnforcedPredownloadScans", "config.WithBackendAssets", "config.WithGalleries", "config.WithCors", "config.WithThreads", "config.WithApiKeys", "config.WithSubtleKeyComparison", "config.WithConfigsDir", "config.WithCsrf", "config.WithUploadDir", "config.WithContextSize", "config.WithBackendAssetsOutput", "config.WithYAMLConfigPreload", "config.WithStringGalleries", "config.WithDisableApiKeyRequirementForHttpGet", "config.WithJSONStringPreload", "config.NewApplicationConfig.o", "config.WithLibPath", "config.WithContext", "config.WithCorsAllowOrigins", "config.WithOpaqueErrors", "config.WithUploadLimitMB", "config.WithF16", "config.WithModelsURL" ],
  "Backend" : [ "grpc.buildClient", "grpc.NewClient" ],
  "BackendConfigFilterFn" : [ "config.BuildUsecaseFilterFn", "config.BuildNameFilterFn" ],
  "C.bool" : [ "whisper.toBool", "whisper.callEncoderBegin" ],
  "C.enum_whisper_sampling_strategy" : [ "whisper.SamplingStrategy" ],
  "C.int" : [ "whisper.callProgress.progress", "whisper.callNewSegment.new" ],
  "C.struct_whisper_context" : [ "whisper.Context" ],
  "C.struct_whisper_full_params" : [ "whisper.Params" ],
  "C.struct_whisper_token_data" : [ "whisper.TokenData" ],
  "C.whisper_token" : [ "whisper.Token" ],
  "ConfigLoaderOption" : [ "config.LoadOptionContextSize", "config.readBackendConfigFromFile.opts", "config.readMultipleBackendConfigsFromFile.opts", "config.LoadOptionDebug", "config.LoadOptionThreads", "config.ModelPath", "config.LoadOptionF16" ],
  "GRPCProcessFilter" : [ "model.allExcept" ],
  "GalleryModels" : [ "gallery.AvailableGalleryModels" ],
  "LLM" : [ "grpc.server.llm", "grpc.Provide.llm", "grpc.RunServer.model", "grpc.StartServer.model" ],
  "Model" : [ "whisper.New" ],
  "Option" : [ "model.WithAssetDir", "model.WithModelID", "model.WithExternalBackend", "model.NewOptions.opts", "model.WithSingleActiveBackend", "model.WithLoadGRPCLoadModelOpts", "model.WithDefaultBackendString", "model.WithGRPCAttempts", "model.WithContext", "model.WithGRPCAttemptsDelay", "model.WithModel", "model.WithBackendString" ],
  "PredictOption" : [ "langchain.SetStopWords", "langchain.SetTemperature", "langchain.SetMaxTokens", "langchain.NewPredictOptions.opts", "langchain.SetModel" ],
  "ProcessManager" : [ "model.WatchDog.pm", "model.NewWatchDog.pm" ],
  "ProcessTracker" : [ "elements.ListModels.processTracker", "elements.modelActionItems.processTracker" ],
  "Rules" : [ "grammars.LLama31SchemaConverter.rules", "grammars.JSONSchemaConverter.rules" ],
  "SchemaConverter" : [ "functions.NewSchemaConverter" ],
  "WatchDog" : [ "grpc.Client.wd", "grpc.NewClient.wd", "grpc.buildClient.wd" ],
  "any" : [ "schema.APIError.Code", "utils.SaveConfig.obj" ],
  "config.AppOption" : [ "application.New.opts" ],
  "config.BackendConfigFilterFn" : [ "services.ListModels.filter" ],
  "context.CancelFunc" : [ "schema.OpenAIRequest.Cancel", "p2p.nodeServiceData.CancelFunc" ],
  "context.Context" : [ "p2p.allocateLocalService.ctx", "store.SetSingle.ctx", "store.GetSingle.ctx", "config.ApplicationConfig.Context", "p2p.discoveryTunnels.ctx", "store.SetCols.ctx", "main.ContextForSignal", "store.DeleteCols.ctx", "backend.ModelInference.ctx", "store.Find.ctx", "p2p.ensureService.ctx", "model.WithContext.ctx", "p2p.proxyP2PConnection.ctx", "config.WithContext.ctx", "main.Download.ctx", "schema.OpenAIRequest.Context", "store.GetCols.ctx", "cli_api.StartP2PStack.ctx", "store.DeleteSingle.ctx", "p2p.nodeAnnounce.ctx", "backend.VAD.ctx", "p2p.ExposeService.ctx", "grpc.embedBackendServerStream.ctx", "p2p.ServiceDiscoverer.ctx" ],
  "cpuid.FeatureID" : [ "xsysinfo.HasCPUCaps.ids" ],
  "elem.Node" : [ "elements.cardSpan", "elements.modelActionItems", "elements.infoButton", "elements.modelDescription", "elements.searchableElement", "elements.deleteButton", "elements.link", "elements.installButton", "elements.reInstallButton" ],
  "embed.FS" : [ "assets.ExtractFiles.content", "cliContext.Context.BackendAssets", "assets.ListFiles.content", "config.WithBackendAssets.f", "config.ApplicationConfig.BackendAssets" ],
  "error" : [ "xsysinfo.GPUs", "store.SetSingle", "explorer.NewDatabase", "services.ListModels", "p2p.ExposeService", "startup.installModel", "backend.ImageGeneration", "config.BuildNameFilterFn", "utils.GetContentURIAsBase64", "main.URLForModel", "main.Process", "gallery.InstallModel", "utils.AudioConvert", "store.DeleteCols", "gallery.DeleteModelFromSystem", "downloader.filenameFromUrl", "http_test.getModels", "gallery.AvailableGalleryModels", "oci.OllamaModelBlob", "oci.GetImage", "main.NewFlags", "gallery.SafetyScanGalleryModels", "xsysinfo.CPUCapabilities", "main.Output", "downloader.removePartialFile", "langchain.NewHuggingFace", "grpc.StartServer", "downloader.calculateSHA", "grammars.jsonString", "downloader.calculateHashForPartialFile", "p2p.discoveryTunnels", "piper.TextToWavSpeaker", "openai.createAssistant", "utils.ffmpegCommand", "templates.TemplateMultiModal", "services.NewLocalAIMetricsService", "downloader.HuggingFaceScan", "openai.CallFilesContentEndpoint", "store.GetCols", "services.ApplyGalleryFromFile", "gallery.GalleryOpStatus.Error", "p2p.NewNode", "gallery.findGalleryURLFromReferenceURL", "main.GetOut", "piper.TextToWav", "p2p.newNodeOpts", "middleware.GetKeyAuthConfig", "gallery.ReadConfigFile", "http.API", "backend.ModelEmbedding", "services.prepareModel", "utils.AudioToWav", "openai.createFileAndAssistant", "application.New", "config.readBackendConfigFromFile", "oci.FetchImageBlob", "store.SetCols", "openai.CallListFilesEndpoint", "services.CheckIfModelExists", "oci.GetOCIImageSize", "backend.StoreBackend", "store.GetSingle", "backend.ModelInference", "openai.downloadFile", "store.DeleteSingle", "http_test.getRequest", "gallery.InstallModelFromGallery", "backend.VAD", "backend.ModelTTS", "main.Download", "services.processRequests", "library.LoadExternal", "p2p.allocateLocalService", "startup.InstallModels", "p2p.ServiceDiscoverer", "whisper.newContext", "main.OutputSRT", "assets.ExtractFiles", "concurrency.err", "openai.getFileFromRequest", "backend.ModelTranscription", "backend.Rerank", "grpc.RunServer", "main.New", "backend.ModelTokenize", "gallery.GetLocalModelConfiguration", "library.LoadExtractedLibs", "model.attemptLoadingOnFailure", "oci.ExtractOCIImage", "e2e_test.downloadHttpFile", "oci.OllamaModelManifest", "gallery.SafetyScanGalleryModel", "openai.CallFilesDeleteEndpoint", "utils.InTrustedRoot", "http_test.postInvalidRequest", "model.backendsInAssetDir", "oci.OllamaFetchModel", "openai.handleQuestion", "config.readMultipleBackendConfigsFromFile", "backend.TokenMetrics", "openai.CallFilesUploadEndpoint", "utils.VerifyPath", "model.attemptLoadingOnFailure.err", "whisper.New", "services.ApplyGalleryFromString", "backend.SoundGeneration", "http.notFoundHandler", "openai.createAssistantFile", "utils.ExtractArchive", "model.orderBackends", "store.Find", "openai.ComputeChoices", "gallery.getGalleryModels", "middleware.mergeOpenAIRequestAndBackendConfig", "cli_api.StartP2PStack", "gallery.GetGalleryConfigFromURL", "functions.ParseJSON" ],
  "fiber.ErrorHandler" : [ "middleware.getApiKeyErrorHandler" ],
  "fiber.Handler" : [ "localai.LocalAIMetricsEndpoint", "localai.LocalAIMetricsAPIMiddleware", "middleware.StripPathPrefix" ],
  "fileHandler" : [ "application.readExternalBackendsJson", "application.readApiKeysJson" ],
  "functions.Functions" : [ "schema.OpenAIRequest.Functions" ],
  "grpc.Backend" : [ "model.Model.client", "store.GetSingle.c", "store.GetCols.c", "store.SetSingle.c", "store.Find.c", "store.DeleteCols.c", "store.SetCols.c", "backend.StoreBackend", "store.DeleteSingle.c" ],
  "hash.Hash" : [ "downloader.calculateHashForPartialFile" ],
  "http.Header" : [ "http_test.getRequest.header" ],
  "http.RoundTripper" : [ "oci.GetImage.t", "oci.GetOCIImageSize.t" ],
  "io.Reader" : [ "p2p.copyStream.src" ],
  "io.Writer" : [ "p2p.copyStream.dst", "main.Download.p", "main.OutputSRT.w", "main.Output.w", "main.DownloadReport.w" ],
  "metric.Float64Histogram" : [ "services.LocalAIMetricsService.ApiTimeMetric" ],
  "metric.Meter" : [ "services.LocalAIMetricsService.Meter" ],
  "model.Option" : [ "backend.ModelOptions.opts" ],
  "net.Conn" : [ "p2p.proxyP2PConnection.conn" ],
  "os.Signal" : [ "main.ContextForSignal.signals" ],
  "sync.Mutex" : [ "model.ModelLoader.mu", "grpc.Client.opMutex", "templates.templateCache.mu", "base.SingleThread.backendBusy" ],
  "sync.Once" : [ "concurrency.once" ],
  "sync.RWMutex" : [ "xsync.mu" ],
  "template.HTML" : [ "http.markDowner" ],
  "time.Duration" : [ "explorer.DiscoveryServer.connectionTime", "whisper.Token.End", "config.SetWatchDogIdleTimeout.t", "main.srtTimestamp.t", "explorer.NewDiscoveryServer.dur", "cli.RunCMD.LocalaiConfigDirPollInterval", "config.ApplicationConfig.WatchDogIdleTimeout", "whisper.Segment.End", "config.SetWatchDogBusyTimeout.t", "model.NewWatchDog.timeoutBusy", "model.WatchDog.timeout", "model.NewWatchDog.timeoutIdle", "model.WatchDog.idletimeout", "schema.TranscriptionSegment.Start", "whisper.Token.Start", "config.ApplicationConfig.DynamicConfigsDirPollInterval", "schema.TranscriptionSegment.End", "config.ApplicationConfig.WatchDogBusyTimeout", "config.WithDynamicConfigDirPollInterval.interval", "whisper.Segment.Start" ],
  "time.Time" : [ "schema.File.CreatedAt", "p2p.NodeData.LastSeen" ],
  "unsafe.Pointer" : [ "whisper.callNewSegment.user_data", "whisper.callEncoderBegin.user_data", "whisper.callProgress.user_data" ],
  "v1.Image" : [ "oci.ExtractOCIImage.img", "oci.GetImage" ],
  "whisper.Model" : [ "main.Process.model" ]
}